(define Y
  (lambda (f)
    ((lambda (x) (f (lambda (y) ((x x) y))))
      (lambda (x) (f (lambda (y) ((x x) y)))))))  %

(define factorial
  (Y (lambda (fact)
    (lambda (n)
      (if (= n 0)
        1
        (* n (fact (- n 1))))))))   %

(factorial 5)   %

(define fibonacci
  (Y (lambda (fib) 
    (lambda (n) 
      (if (= n 0)
        0
        (if (= n 1)
          1
          (+ (fib (- n 1)) (fib (- n 2)))))))))   %